# Generated by Django 5.2.1 on 2025-06-03 09:26

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0002_initial'),
        ('employees', '0001_initial'),
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_id', models.CharField(max_length=50, unique=True)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('payment_type', models.CharField(choices=[('service_payment', 'Service Payment'), ('deposit', 'Deposit'), ('refund', 'Refund'), ('adjustment', 'Adjustment'), ('loyalty_redemption', 'Loyalty Redemption')], default='service_payment', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('verified', 'Verified')], default='pending', max_length=20)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255)),
                ('external_reference', models.CharField(blank=True, max_length=255)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='customers.customer')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payments', to='employees.employee')),
                ('service_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='services.serviceorder')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_updated', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_payments', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MPesaTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('mpesa_receipt_number', models.CharField(blank=True, max_length=50)),
                ('transaction_date', models.DateTimeField(blank=True, null=True)),
                ('merchant_request_id', models.CharField(blank=True, max_length=100)),
                ('checkout_request_id', models.CharField(blank=True, max_length=100)),
                ('result_code', models.CharField(blank=True, max_length=10)),
                ('result_desc', models.TextField(blank=True)),
                ('callback_data', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mpesa_details', to='payments.payment')),
            ],
            options={
                'verbose_name': 'M-Pesa Transaction',
                'verbose_name_plural': 'M-Pesa Transactions',
            },
        ),
        migrations.CreateModel(
            name='CashTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount_tendered', models.DecimalField(decimal_places=2, max_digits=10)),
                ('change_given', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes_1000', models.IntegerField(default=0)),
                ('notes_500', models.IntegerField(default=0)),
                ('notes_200', models.IntegerField(default=0)),
                ('notes_100', models.IntegerField(default=0)),
                ('notes_50', models.IntegerField(default=0)),
                ('coins_40', models.IntegerField(default=0)),
                ('coins_20', models.IntegerField(default=0)),
                ('coins_10', models.IntegerField(default=0)),
                ('coins_5', models.IntegerField(default=0)),
                ('coins_1', models.IntegerField(default=0)),
                ('till_number', models.CharField(blank=True, max_length=20)),
                ('cashier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cash_transactions', to='employees.employee')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cash_details', to='payments.payment')),
            ],
            options={
                'verbose_name': 'Cash Transaction',
                'verbose_name_plural': 'Cash Transactions',
            },
        ),
        migrations.CreateModel(
            name='CardTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('card_type', models.CharField(blank=True, max_length=20)),
                ('masked_pan', models.CharField(blank=True, max_length=20)),
                ('card_holder_name', models.CharField(blank=True, max_length=100)),
                ('authorization_code', models.CharField(blank=True, max_length=50)),
                ('processor_response', models.CharField(blank=True, max_length=100)),
                ('gateway_transaction_id', models.CharField(blank=True, max_length=100)),
                ('cvv_response', models.CharField(blank=True, max_length=10)),
                ('avs_response', models.CharField(blank=True, max_length=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='card_details', to='payments.payment')),
            ],
            options={
                'verbose_name': 'Card Transaction',
                'verbose_name_plural': 'Card Transactions',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('method_type', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('mpesa', 'M-Pesa'), ('bank_transfer', 'Bank Transfer'), ('cheque', 'Cheque'), ('mobile_money', 'Mobile Money'), ('crypto', 'Cryptocurrency')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_online', models.BooleanField(default=False, help_text='Requires online processing')),
                ('requires_verification', models.BooleanField(default=False)),
                ('processing_fee_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('fixed_processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('minimum_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maximum_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('daily_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('api_endpoint', models.URLField(blank=True)),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('merchant_id', models.CharField(blank=True, max_length=100)),
                ('icon', models.CharField(default='fas fa-credit-card', max_length=50)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('display_order', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('gateway_type', models.CharField(choices=[('mpesa', 'M-Pesa Daraja'), ('stripe', 'Stripe'), ('paypal', 'PayPal'), ('flutterwave', 'Flutterwave'), ('pesapal', 'PesaPal'), ('ipay', 'iPay')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_live', models.BooleanField(default=False, help_text='Live mode vs Test mode')),
                ('api_url', models.URLField()),
                ('api_key', models.CharField(max_length=255)),
                ('api_secret', models.CharField(max_length=255)),
                ('merchant_id', models.CharField(blank=True, max_length=100)),
                ('consumer_key', models.CharField(blank=True, max_length=255)),
                ('consumer_secret', models.CharField(blank=True, max_length=255)),
                ('passkey', models.CharField(blank=True, max_length=255)),
                ('shortcode', models.CharField(blank=True, max_length=20)),
                ('webhook_url', models.URLField(blank=True)),
                ('webhook_secret', models.CharField(blank=True, max_length=255)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('supported_methods', models.ManyToManyField(blank=True, to='payments.paymentmethod')),
            ],
            options={
                'verbose_name': 'Payment Gateway',
                'verbose_name_plural': 'Payment Gateways',
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_method',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='payments.paymentmethod'),
        ),
        migrations.CreateModel(
            name='PaymentRefund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('refund_id', models.CharField(max_length=50, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('external_refund_id', models.CharField(blank=True, max_length=255)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_refunds', to='employees.employee')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('original_payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.payment')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_refunds', to='employees.employee')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Refund',
                'verbose_name_plural': 'Payment Refunds',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentSplit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipient_type', models.CharField(choices=[('employee', 'Employee Commission'), ('business', 'Business Revenue'), ('platform', 'Platform Fee'), ('tax', 'Tax'), ('other', 'Other')], max_length=20)),
                ('recipient_id', models.CharField(blank=True, max_length=50)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='splits', to='payments.payment')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Split',
                'verbose_name_plural': 'Payment Splits',
            },
        ),
        migrations.CreateModel(
            name='RecurringPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('next_payment_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='active', max_length=20)),
                ('total_payments_made', models.IntegerField(default=0)),
                ('total_amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('max_retry_attempts', models.IntegerField(default=3)),
                ('current_retry_count', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_payments', to='customers.customer')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentmethod')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recurring Payment',
                'verbose_name_plural': 'Recurring Payments',
            },
        ),
    ]
