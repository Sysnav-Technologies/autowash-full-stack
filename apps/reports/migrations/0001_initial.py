# Generated by Django 5.2.1 on 2025-06-03 09:26

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('employees', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.CharField(choices=[('customer_registered', 'Customer Registered'), ('service_completed', 'Service Completed'), ('payment_received', 'Payment Received'), ('customer_feedback', 'Customer Feedback'), ('employee_login', 'Employee Login'), ('report_generated', 'Report Generated'), ('inventory_low', 'Low Inventory Alert'), ('goal_achieved', 'Goal Achieved')], max_length=50)),
                ('event_data', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_events', to='customers.customer')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_events', to='employees.employee')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Analytics Event',
                'verbose_name_plural': 'Analytics Events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BusinessMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(unique=True)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('service_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('package_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_customers_served', models.IntegerField(default=0)),
                ('new_customers', models.IntegerField(default=0)),
                ('returning_customers', models.IntegerField(default=0)),
                ('vip_customers_served', models.IntegerField(default=0)),
                ('total_services', models.IntegerField(default=0)),
                ('completed_services', models.IntegerField(default=0)),
                ('cancelled_services', models.IntegerField(default=0)),
                ('average_service_time', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('cash_payments', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('card_payments', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('mpesa_payments', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('employees_present', models.IntegerField(default=0)),
                ('employees_absent', models.IntegerField(default=0)),
                ('total_working_hours', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('average_queue_time', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('customer_satisfaction', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('inventory_consumed_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('employee_costs', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('operational_expenses', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Business Metrics',
                'verbose_name_plural': 'Business Metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('layout', models.JSONField(default=dict, help_text='Dashboard layout configuration')),
                ('widgets', models.JSONField(default=list, help_text='Widget configurations')),
                ('filters', models.JSONField(default=dict, help_text='Global dashboard filters')),
                ('is_default', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('owner', 'Business Owner'), ('manager', 'Manager'), ('supervisor', 'Supervisor'), ('attendant', 'Attendant'), ('all', 'All Roles')], default='all', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('auto_refresh', models.BooleanField(default=True)),
                ('refresh_interval', models.IntegerField(default=300, help_text='Refresh interval in seconds')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dashboard',
                'verbose_name_plural': 'Dashboards',
                'ordering': ['role', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('report_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('status', models.CharField(choices=[('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed'), ('expired', 'Expired')], default='generating', max_length=20)),
                ('report_data', models.JSONField(default=dict)),
                ('summary_data', models.JSONField(default=dict)),
                ('charts_data', models.JSONField(default=dict)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='reports/pdf/')),
                ('excel_file', models.FileField(blank=True, null=True, upload_to='reports/excel/')),
                ('csv_file', models.FileField(blank=True, null=True, upload_to='reports/csv/')),
                ('generation_time', models.FloatField(blank=True, help_text='Time taken to generate in seconds', null=True)),
                ('row_count', models.IntegerField(default=0)),
                ('file_size', models.IntegerField(default=0, help_text='File size in bytes')),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to='employees.employee')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Generated Report',
                'verbose_name_plural': 'Generated Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('kpi_type', models.CharField(choices=[('revenue', 'Revenue'), ('customers', 'Customer Count'), ('satisfaction', 'Customer Satisfaction'), ('efficiency', 'Operational Efficiency'), ('growth', 'Growth Rate'), ('retention', 'Customer Retention'), ('profitability', 'Profitability')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('target_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('current_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('calculation_method', models.CharField(help_text='Method to calculate this KPI', max_length=100)),
                ('data_source', models.CharField(help_text='Data source for calculation', max_length=100)),
                ('measurement_period', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], default='monthly', max_length=20)),
                ('unit', models.CharField(default='units', max_length=20)),
                ('format_string', models.CharField(default='{value} {unit}', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('last_calculated', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'KPI',
                'verbose_name_plural': 'KPIs',
                'ordering': ['kpi_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReportExport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], max_length=10)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.IntegerField(default=0)),
                ('download_count', models.IntegerField(default=0)),
                ('last_downloaded', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('exported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='report_exports', to='employees.employee')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='reports.generatedreport')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Export',
                'verbose_name_plural': 'Report Exports',
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('financial', 'Financial Report'), ('sales', 'Sales Report'), ('customer', 'Customer Report'), ('employee', 'Employee Report'), ('inventory', 'Inventory Report'), ('service', 'Service Performance'), ('payment', 'Payment Analysis'), ('operational', 'Operational Report'), ('custom', 'Custom Report')], max_length=20)),
                ('data_sources', models.JSONField(default=list, help_text='List of data sources/models')),
                ('filters', models.JSONField(default=dict, help_text='Default filters for the report')),
                ('columns', models.JSONField(default=list, help_text='Columns to include in report')),
                ('aggregations', models.JSONField(default=dict, help_text='Aggregation functions')),
                ('charts', models.JSONField(default=list, help_text='Chart configurations')),
                ('is_scheduled', models.BooleanField(default=False)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('custom', 'Custom Date Range')], default='monthly', max_length=20)),
                ('schedule_time', models.TimeField(blank=True, null=True)),
                ('schedule_day', models.IntegerField(blank=True, help_text='Day of month for monthly reports', null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('allowed_roles', models.JSONField(default=list, help_text='Roles that can access this report')),
                ('is_active', models.BooleanField(default=True)),
                ('auto_email', models.BooleanField(default=False)),
                ('email_recipients', models.JSONField(default=list)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'ordering': ['report_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('custom', 'Custom Date Range')], default='monthly', max_length=20)),
                ('schedule_time', models.TimeField(default='09:00')),
                ('schedule_day', models.IntegerField(blank=True, help_text='Day of month for monthly reports', null=True)),
                ('schedule_weekday', models.IntegerField(blank=True, help_text='Day of week for weekly reports', null=True)),
                ('email_enabled', models.BooleanField(default=True)),
                ('email_recipients', models.JSONField(default=list)),
                ('email_subject', models.CharField(blank=True, max_length=200)),
                ('email_body', models.TextField(blank=True)),
                ('last_generated', models.DateTimeField(blank=True, null=True)),
                ('next_generation', models.DateTimeField(blank=True, null=True)),
                ('generation_count', models.IntegerField(default=0)),
                ('last_error', models.TextField(blank=True)),
                ('consecutive_failures', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='reports.reporttemplate')),
            ],
            options={
                'verbose_name': 'Report Schedule',
                'verbose_name_plural': 'Report Schedules',
            },
        ),
        migrations.AddField(
            model_name='generatedreport',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='reports.reporttemplate'),
        ),
        migrations.CreateModel(
            name='ReportWidget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('widget_type', models.CharField(choices=[('metric', 'Single Metric'), ('chart', 'Chart'), ('table', 'Data Table'), ('progress', 'Progress Bar'), ('gauge', 'Gauge'), ('map', 'Map'), ('timeline', 'Timeline'), ('list', 'List')], max_length=20)),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('doughnut', 'Doughnut Chart'), ('area', 'Area Chart'), ('scatter', 'Scatter Plot'), ('radar', 'Radar Chart')], max_length=20)),
                ('data_source', models.CharField(help_text='Model or API endpoint', max_length=100)),
                ('query_config', models.JSONField(default=dict, help_text='Query configuration and filters')),
                ('aggregation_config', models.JSONField(default=dict, help_text='Aggregation functions')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('display_config', models.JSONField(default=dict, help_text='Display settings like colors, formatting')),
                ('grid_position', models.JSONField(default=dict, help_text='Grid position {x, y, width, height}')),
                ('cache_duration', models.IntegerField(default=300, help_text='Cache duration in seconds')),
                ('last_cached', models.DateTimeField(blank=True, null=True)),
                ('cached_data', models.JSONField(default=dict)),
                ('required_role', models.CharField(choices=[('owner', 'Owner'), ('manager', 'Manager+'), ('supervisor', 'Supervisor+'), ('attendant', 'All Staff')], default='attendant', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Widget',
                'verbose_name_plural': 'Report Widgets',
                'ordering': ['name'],
            },
        ),
    ]
