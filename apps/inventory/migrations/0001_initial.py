# Generated by Django 5.2.1 on 2025-06-03 09:26

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemConsumption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Item Consumption',
                'verbose_name_plural': 'Item Consumptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ItemExpiry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch_number', models.CharField(blank=True, max_length=100)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('remaining_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('manufacture_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField()),
                ('is_expired', models.BooleanField(default=False)),
                ('is_disposed', models.BooleanField(default=False)),
                ('disposed_date', models.DateField(blank=True, null=True)),
                ('disposed_reason', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Item Expiry Record',
                'verbose_name_plural': 'Item Expiry Records',
                'ordering': ['expiry_date'],
            },
        ),
        migrations.CreateModel(
            name='ItemLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('warehouse', models.CharField(default='Main Warehouse', max_length=100)),
                ('zone', models.CharField(blank=True, max_length=50)),
                ('aisle', models.CharField(blank=True, max_length=20)),
                ('shelf', models.CharField(blank=True, max_length=20)),
                ('bin', models.CharField(blank=True, max_length=20)),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_picking_location', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Item Location',
                'verbose_name_plural': 'Item Locations',
            },
        ),
        migrations.CreateModel(
            name='ItemSerial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('in_stock', 'In Stock'), ('sold', 'Sold'), ('damaged', 'Damaged'), ('returned', 'Returned'), ('reserved', 'Reserved')], default='in_stock', max_length=20)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sold_date', models.DateField(blank=True, null=True)),
                ('sold_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('warranty_start', models.DateField(blank=True, null=True)),
                ('warranty_end', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Item Serial Number',
                'verbose_name_plural': 'Item Serial Numbers',
                'ordering': ['serial_number'],
            },
        ),
        migrations.CreateModel(
            name='StockAdjustment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('adjustment_type', models.CharField(choices=[('manual', 'Manual Adjustment'), ('damage', 'Damage'), ('theft', 'Theft'), ('expired', 'Expired'), ('found', 'Found'), ('cycle_count', 'Cycle Count'), ('return', 'Return')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('old_stock', models.DecimalField(decimal_places=2, max_digits=10)),
                ('new_stock', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Stock Adjustment',
                'verbose_name_plural': 'Stock Adjustments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movement_type', models.CharField(choices=[('in', 'Stock In'), ('out', 'Stock Out'), ('adjustment', 'Adjustment'), ('transfer', 'Transfer')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('old_stock', models.DecimalField(decimal_places=2, max_digits=10)),
                ('new_stock', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference_number', models.CharField(blank=True, max_length=50)),
                ('reference_type', models.CharField(blank=True, choices=[('purchase', 'Purchase Order'), ('sale', 'Sale/Service'), ('adjustment', 'Stock Adjustment'), ('transfer', 'Stock Transfer'), ('return', 'Return'), ('damage', 'Damage/Loss')], max_length=20)),
                ('reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Stock Movement',
                'verbose_name_plural': 'Stock Movements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockTake',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('include_all_items', models.BooleanField(default=True)),
                ('scheduled_date', models.DateField()),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('total_items_counted', models.IntegerField(default=0)),
                ('discrepancies_found', models.IntegerField(default=0)),
                ('total_variance_value', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
            ],
            options={
                'verbose_name': 'Stock Take',
                'verbose_name_plural': 'Stock Takes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockTakeCount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('system_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('counted_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('count_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Stock Take Count',
                'verbose_name_plural': 'Stock Take Counts',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('abbreviation', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Unit of Measurement',
                'verbose_name_plural': 'Units of Measurement',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alert_type', models.CharField(choices=[('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('reorder_point', 'Reorder Point Reached'), ('overstock', 'Overstock'), ('expired', 'Expired Items'), ('near_expiry', 'Items Near Expiry')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('message', models.TextField()),
                ('current_stock', models.DecimalField(decimal_places=2, max_digits=10)),
                ('threshold_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_inventory_alerts', to='employees.employee')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Alert',
                'verbose_name_plural': 'Inventory Alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='inventory.inventorycategory')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Category',
                'verbose_name_plural': 'Inventory Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('item_type', models.CharField(choices=[('product', 'Finished Product'), ('raw_material', 'Raw Material'), ('consumable', 'Consumable'), ('equipment', 'Equipment'), ('spare_part', 'Spare Part')], default='product', max_length=20)),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=50, unique=True)),
                ('barcode', models.CharField(blank=True, max_length=100, unique=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('dimensions', models.CharField(blank=True, help_text='Length x Width x Height', max_length=100)),
                ('current_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('minimum_stock_level', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maximum_stock_level', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reorder_point', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reorder_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('storage_location', models.CharField(blank=True, max_length=100)),
                ('storage_requirements', models.TextField(blank=True, help_text='Special storage requirements')),
                ('is_active', models.BooleanField(default=True)),
                ('is_taxable', models.BooleanField(default=True)),
                ('track_serial_numbers', models.BooleanField(default=False)),
                ('track_expiry', models.BooleanField(default=False)),
                ('quality_check_required', models.BooleanField(default=False)),
                ('shelf_life_days', models.IntegerField(blank=True, help_text='Shelf life in days', null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='inventory_items/')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.inventorycategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'ordering': ['name'],
            },
        ),
    ]
