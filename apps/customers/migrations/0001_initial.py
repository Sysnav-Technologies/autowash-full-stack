# Generated by Django 5.2.1 on 2025-06-03 09:26

import apps.core.utils
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note_type', models.CharField(choices=[('general', 'General Note'), ('complaint', 'Complaint'), ('compliment', 'Compliment'), ('follow_up', 'Follow Up'), ('reminder', 'Reminder'), ('payment', 'Payment Issue'), ('service', 'Service Note')], default='general', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_private', models.BooleanField(default=False, help_text='Only visible to staff')),
                ('is_important', models.BooleanField(default=False)),
                ('requires_follow_up', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_completed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Customer Note',
                'verbose_name_plural': 'Customer Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyProgram',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('points_per_currency_unit', models.DecimalField(decimal_places=2, default=1, help_text='Points earned per currency unit spent', max_digits=5)),
                ('minimum_order_amount', models.DecimalField(decimal_places=2, default=0, help_text='Minimum order amount to earn points', max_digits=10)),
                ('points_to_currency_ratio', models.DecimalField(decimal_places=2, default=0.01, help_text='Currency value per loyalty point', max_digits=5)),
                ('minimum_redemption_points', models.IntegerField(default=100, help_text='Minimum points required for redemption')),
                ('bronze_threshold', models.IntegerField(default=0)),
                ('silver_threshold', models.IntegerField(default=1000)),
                ('gold_threshold', models.IntegerField(default=5000)),
                ('platinum_threshold', models.IntegerField(default=10000)),
                ('silver_multiplier', models.DecimalField(decimal_places=2, default=1.2, max_digits=3)),
                ('gold_multiplier', models.DecimalField(decimal_places=2, default=1.5, max_digits=3)),
                ('platinum_multiplier', models.DecimalField(decimal_places=2, default=2.0, max_digits=3)),
            ],
            options={
                'verbose_name': 'Loyalty Program',
                'verbose_name_plural': 'Loyalty Programs',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('registration_number', models.CharField(max_length=20, unique=True)),
                ('make', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('color', models.CharField(max_length=30)),
                ('vehicle_type', models.CharField(choices=[('sedan', 'Sedan'), ('suv', 'SUV'), ('hatchback', 'Hatchback'), ('pickup', 'Pickup Truck'), ('van', 'Van'), ('bus', 'Bus'), ('truck', 'Truck'), ('motorcycle', 'Motorcycle'), ('other', 'Other')], max_length=20)),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('hybrid', 'Hybrid'), ('electric', 'Electric'), ('other', 'Other')], max_length=20)),
                ('engine_size', models.CharField(blank=True, max_length=20)),
                ('transmission', models.CharField(blank=True, choices=[('manual', 'Manual'), ('automatic', 'Automatic')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_service_date', models.DateField(blank=True, null=True)),
                ('last_service_mileage', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Special notes about the vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['registration_number'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('street_address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='Kenya', max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('customer_type', models.CharField(choices=[('individual', 'Individual'), ('corporate', 'Corporate'), ('government', 'Government')], default='individual', max_length=20)),
                ('customer_id', models.CharField(max_length=20, unique=True)),
                ('phone_secondary', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('national_id', models.CharField(blank=True, max_length=20)),
                ('business_registration_number', models.CharField(blank=True, max_length=100)),
                ('tax_number', models.CharField(blank=True, max_length=100)),
                ('preferred_contact_method', models.CharField(choices=[('phone', 'Phone'), ('sms', 'SMS'), ('email', 'Email'), ('whatsapp', 'WhatsApp')], default='phone', max_length=20)),
                ('receive_marketing_sms', models.BooleanField(default=True)),
                ('receive_marketing_email', models.BooleanField(default=True)),
                ('receive_service_reminders', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_vip', models.BooleanField(default=False)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('loyalty_points', models.IntegerField(default=0)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about the customer')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='CustomerDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document_type', models.CharField(choices=[('id_copy', 'ID Copy'), ('driving_license', 'Driving License'), ('insurance', 'Insurance Documents'), ('registration', 'Vehicle Registration'), ('contract', 'Service Contract'), ('invoice', 'Invoice'), ('receipt', 'Receipt'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to=apps.core.utils.upload_to_path)),
                ('description', models.TextField(blank=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='customers.customer')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer Document',
                'verbose_name_plural': 'Customer Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('overall_rating', models.IntegerField(choices=[(1, '1 - Very Poor'), (2, '2 - Poor'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')])),
                ('service_quality', models.IntegerField(blank=True, choices=[(1, '1 - Very Poor'), (2, '2 - Poor'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], null=True)),
                ('staff_friendliness', models.IntegerField(blank=True, choices=[(1, '1 - Very Poor'), (2, '2 - Poor'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], null=True)),
                ('cleanliness', models.IntegerField(blank=True, choices=[(1, '1 - Very Poor'), (2, '2 - Poor'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], null=True)),
                ('value_for_money', models.IntegerField(blank=True, choices=[(1, '1 - Very Poor'), (2, '2 - Poor'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], null=True)),
                ('comments', models.TextField(blank=True)),
                ('suggestions', models.TextField(blank=True)),
                ('is_published', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('response', models.TextField(blank=True, help_text='Management response to feedback')),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='customers.customer')),
                ('responded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback_responses', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Customer Feedback',
                'verbose_name_plural': 'Customer Feedback',
                'ordering': ['-created_at'],
            },
        ),
    ]
